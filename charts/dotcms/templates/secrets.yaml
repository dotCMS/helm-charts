{{- if .Values.secrets.createSecrets }}
{{- $namespace := .Release.Namespace }}
---
apiVersion: v1
kind: Secret
metadata:
  {{- $dbSecretName := include "dotcms.secret.shared.name" (dict "Values" .Values "secretName" "db-local-admin" ) }}
  name: {{ $dbSecretName }}
  namespace: {{ $namespace }}
  annotations:
    "helm.sh/hook": pre-upgrade,pre-install
    "helm.sh/hook-weight": "-50"
    "helm.sh/resource-policy": "keep"
  labels:
    secrets-store.csi.k8s.io/managed: "true"
type: kubernetes.io/basic-auth
data:
  {{- $dbSecretObj := (lookup "v1" "Secret" $namespace $dbSecretName ) | default dict }}
  {{- $dbSecretData := (get $dbSecretObj "data") | default dict }}
  {{- $dbUsername := (get $dbSecretData "username") | default ( "postgres_admin_user" | b64enc ) }}
  {{- $dbPassword := (get $dbSecretData "password") | default (randAlphaNum 8 | b64enc) }}
  username: {{ $dbUsername | quote }}
  password: {{ $dbPassword | quote }}
{{- if .Values.license }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "dotcms.secret.shared.name" (dict "Values" .Values "secretName" "license") }}
  annotations:
    "helm.sh/hook": pre-upgrade,pre-install
    "helm.sh/hook-weight": "-50"
    "helm.sh/resource-policy": "keep"
  labels:
    secrets-store.csi.k8s.io/managed: "true"
type: Opaque
data:
    {{- $licenseSecretName := include "dotcms.secret.shared.name" (dict "Values" .Values "secretName" "license") }}
    {{- $licenseSecretObj := (lookup "v1" "Secret" $namespace $licenseSecretName ) | default dict }}
    {{- $licenseSecretData := (get $licenseSecretObj "data") | default dict }}
    {{- $license := get $licenseSecretData "license" }}
    {{- if not $license }}
    {{- $license = default "" ( .Values.license  | b64enc )}}
    {{- end }}
  license: {{ $license | quote }}
{{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  {{- $mailSecretName := include "dotcms.secret.shared.name" (dict "Values" .Values "secretName" "ses") }}
  name: {{ $mailSecretName }}
  annotations:
    "helm.sh/hook": pre-upgrade,pre-install
    "helm.sh/hook-weight": "-50"
    "helm.sh/resource-policy": "keep"
  labels:
    secrets-store.csi.k8s.io/managed: "true"
type: kubernetes.io/basic-auth
data:

    {{- $mailSecretObj := (lookup "v1" "Secret" $namespace $mailSecretName ) | default dict }}
    {{- $mailSecretData := (get $mailSecretObj "data") | default dict }}
    {{- $mailUsername := (get $mailSecretData "password") | default ( "mailuser" | b64enc ) }}
    {{- $mailPassword := (get $mailSecretData "password") | default (randAlphaNum 8 | b64enc) }}
  username: {{ $mailUsername | quote }}
  password: {{ $mailPassword | quote }}
---
apiVersion: v1
kind: Secret
metadata:
    {{- $searchSecretName := include "dotcms.secret.shared.name" (dict "Values" .Values "secretName" "elasticsearch" ) }}
  name: {{ $searchSecretName }}
  annotations:
    "helm.sh/hook": pre-upgrade,pre-install
    "helm.sh/hook-weight": "-50"
    "helm.sh/resource-policy": "keep"
  labels:
    secrets-store.csi.k8s.io/managed: "true"
type: kubernetes.io/basic-auth
data:
  {{- $searchSecretObj := (lookup "v1" "Secret" $namespace $searchSecretName ) | default dict }}
  {{- $searchSecretData := (get $searchSecretObj "data") | default dict }}
  {{- $searchUsername := (get $searchSecretData "password") | default ( "opensearchuser" | b64enc ) }}
  {{- $searchPassword := (get $searchSecretData "password") | default (randAlphaNum 8 | b64enc) }}
  username: {{ $searchUsername | quote }}
  password: {{ $searchPassword | quote }}
{{- end }}