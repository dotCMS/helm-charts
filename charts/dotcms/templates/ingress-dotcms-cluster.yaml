{{- range $envName := keys .Values.environments }}
{{- with include "myapp.mergeEnvironment" ( mergeOverwrite $ (dict "envName" $envName )) | fromYaml }}
{{- $fullName := include "dotcms.env.fullName" . }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.customerName }}-{{ .Values.environment }}-alb
  namespace: {{ .Values.customerName }}
  annotations:
    kubernetes.io/ingress.class: {{ .Values.ingress.type }}
    service.beta.kubernetes.io/aws-load-balancer-internal: 'false'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/tags: dotcms.client.name.short={{ .Values.customerName }}, VantaOwner=example@dotcms.com, VantaDescription=ALB for {{ .Values.customerName }} {{ .Values.environment }}, VantaNonProd=true
    alb.ingress.kubernetes.io/backend-protocol: {{ .Values.ingress.alb.healthcheck.backendProtocol }}
    alb.ingress.kubernetes.io/healthcheck-protocol: {{ .Values.ingress.alb.healthcheck.protocol }}
    alb.ingress.kubernetes.io/healthcheck-port: '{{ .Values.readinessProbe.httpGet.port }}'
    alb.ingress.kubernetes.io/healthcheck-path: '{{ .Values.readinessProbe.httpGet.path }}'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '{{ .Values.ingress.alb.healthcheck.intervalSeconds }}'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '{{ .Values.ingress.alb.healthcheck.timeoutSeconds }}'
    alb.ingress.kubernetes.io/success-codes: '{{ .Values.ingress.alb.healthcheck.successCodes }}'
    alb.ingress.kubernetes.io/healthy-threshold-count: '{{ .Values.ingress.alb.healthcheck.healthyThresholdCount }}'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '{{ .Values.ingress.alb.healthcheck.unhealthyThresholdCount }}'
    alb.ingress.kubernetes.io/target-group-attributes: >-
      stickiness.enabled={{ .Values.ingress.alb.targetGroup.stickiness.enabled }},
      stickiness.lb_cookie.duration_seconds={{ .Values.ingress.alb.targetGroup.stickiness.cookieDuration }},
      slow_start.duration_seconds={{ .Values.ingress.alb.targetGroup.slowStart.durationSeconds }},
      deregistration_delay.timeout_seconds={{ .Values.ingress.alb.targetGroup.deregistrationDelay.timeoutSeconds }},
      load_balancing.algorithm.type={{ .Values.ingress.alb.targetGroup.loadBalancing.algorithmType }}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    {{- if eq .Values.ingress.type "alb" }}
    {{- include "dotcms.ingress.alb.annotations" . | nindent 4 }}
    {{- end }}
spec:
  {{- if eq .Values.ingress.type "nginx" }}
  tls:
    - hosts:
        - {{ include "dotcms.ingress.externalHost" . | quote }}
      secretName: {{ .Values.ingress.tlsSecretName }}
  {{- end }}
  ingressClassName: {{ .Values.ingress.type }}
  rules:
    {{ include "dotcms.ingress.alb.additionalHosts" . | nindent 4 }}
    - host: {{ include "dotcms.ingress.externalHost" . | quote }}
    - http:
        paths:
          - backend:
              service:
                name: ssl-redirect
                port:
                  name: use-annotation
            path: /
            pathType: Prefix
          - backend:
              service:
                name: {{ include "dotcms.env.serviceName" . }}
                port:
                  number:
                    8082
            path: /
            pathType: Prefix
  defaultBackend:
    service:
      name: {{ include "dotcms.env.serviceName" . }}
      port:
        number: 8082
{{- end }}
{{- end }}