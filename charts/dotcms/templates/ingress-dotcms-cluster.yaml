{{- range $envName := keys .Values.environments }}
{{- with include "myapp.mergeEnvironment" ( mergeOverwrite $ (dict "envName" $envName )) | fromYaml }}
{{- $fullName := include "dotcms.env.fullName" . }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Values.customer_name }}-{{ .Values.environment }}-alb
  namespace: {{ .Values.customer_name }}
  annotations:
    kubernetes.io/ingress.class: {{ .Values.dotcms.ingress.type }}
    service.beta.kubernetes.io/aws-load-balancer-internal: 'false'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/tags: dotcms.client.name.short={{ .Values.customer_name }}, VantaOwner=example@dotcms.com, VantaDescription=ALB for {{ .Values.customer_name }} {{ .Values.environment }}, VantaNonProd=true
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: '8082'
    alb.ingress.kubernetes.io/healthcheck-path: /api/v1/appconfiguration
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '5'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
    alb.ingress.kubernetes.io/target-group-attributes: stickiness.enabled=true,stickiness.lb_cookie.duration_seconds=18000
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=60
    {{- if eq .Values.dotcms.ingress.type "alb" }}
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.dotcms.ingress.alb.certificateArn }}
    alb.ingress.kubernetes.io/ssl-policy: {{ .Values.dotcms.ingress.alb.sslPolicy }}
    alb.ingress.kubernetes.io/security-groups: {{ .Values.dotcms.ingress.alb.securityGroups }}
    {{- end }}
spec:
  {{- if eq .Values.dotcms.ingress.type "nginx" }}
  tls:
    - hosts:
        - {{ include "dotcms.ingress.externalHost" . | quote }}
      secretName: {{ .Values.dotcms.ingress.tlsSecretName }}
  {{- end }}
  ingressClassName: {{ .Values.dotcms.ingress.type }}
  rules:
    - host: {{ include "dotcms.ingress.externalHost" . | quote }}
    - http:
        paths:
          - backend:
              service:
                name: ssl-redirect
                port:
                  name: use-annotation
            path: /
            pathType: Prefix
          - backend:
              service:
                name: {{ include "dotcms.env.serviceName" . }}
                port:
                  number:
                    8082
            path: /
            pathType: Prefix
  defaultBackend:
    service:
      name: {{ include "dotcms.env.serviceName" . }}
      port:
        number: 8082
{{- end }}
{{- end }}