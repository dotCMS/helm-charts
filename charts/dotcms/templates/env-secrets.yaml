{{- if .Values.secrets.createSecrets }}
{{- $namespace := .Release.Namespace }}
{{- $envKeys := keys $.Values.environments }}
{{- range $envName := keys $.Values.environments }}
{{- with include "myapp.mergeEnvironment" (dict "Values" $.Values "envName" $envName ) | fromYaml }}
{{- $fullName := include "dotcms.env.fullName" . }}
---
apiVersion: v1
kind: Secret
metadata:
  {{- $dbSecretName := include "dotcms.secret.env.name" (dict "Values" $.Values "secretName" "database") }}
  name: {{ $dbSecretName }}
  namespace: {{ $namespace }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: kubernetes.io/basic-auth
data:
  {{- $dbSecretObj := (lookup "v1" "Secret" $namespace $dbSecretName ) | default dict }}
  {{- $dbSecretData := (get $dbSecretObj "data") | default dict }}
  {{- $dbUsername := (get $dbSecretData "username") | default ( printf "%s_user" $envName | b64enc ) }}
  {{- $dbPassword := (get $dbSecretData "password") | default (randAlphaNum 8 | b64enc) }}
  username: {{ $dbUsername | quote }}
  password: {{ $dbPassword | quote }}
---
apiVersion: v1
kind: Secret
metadata:
  {{- $secretName2 := include "dotcms.secret.env.name" (dict "Values" $.Values "secretName" "dotcms-admin") }}
  name: {{ $secretName2 }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: kubernetes.io/basic-auth
data:
  {{- $adminSecretObj := (lookup "v1" "Secret" $namespace $dbSecretName ) | default dict }}
  {{- $adminSecretData := (get $adminSecretObj "data") | default dict }}
  {{- $adminUsername := (get $adminSecretData "username") | default ( "admin@dotcms.com" | b64enc ) }}
  {{- $adminPassword := (get $adminSecretData "password") | default (randAlphaNum 8 | b64enc) }}
  username: {{ $dbUsername | quote }}
  password: {{ $dbPassword | quote }}
{{- end }}
{{- end }}
{{- end }}