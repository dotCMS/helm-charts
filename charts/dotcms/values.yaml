app: dotcms
customerName: dotcms-dev
environmentType: local-dev # local-dev, customer-sandbox, staff-sandbox, partner-sandbox, production, qa
cloudProvider: local
hostType: corp # corp, sh

coreServiceEnabled: true
repository: dotcms/dotcms-test
tag: 1.0.0-SNAPSHOT
imagePullPolicy: IfNotPresent
terminationGracePeriodSeconds: 10
scaleDownBeforeUpgrade: false
configVersion: 1
replicas: 1
resources:
  requests:
    cpu: 0.5
    memory: 5Gi
  limits:
    cpu: 2
    memory: 5Gi
envVariables: {}
javaMemory: 2
# defaultJavaOpts: "-XX:+PrintFlagsFinal -Djdk.lang.Process.launchMechanism=fork"
# additionalJavaOpts: ""
# javaHeapMax: 2g


aws:
  region: us-east-1
  serviceAccount:
    roleArn: ""
  secrets:
    secretsArn: ""

secrets:
  createSecrets: true
  useSecretsStoreCSI: false
  prefix: "{{ .Values.cloudProvider }}-secret"
  sync:
    shared:
      elasticsearch:
        type: kubernetes.io/basic-auth
        keys:
          - "username"
          - "password"
      ses:
        type: kubernetes.io/basic-auth
        keys:
          - "username"
          - "password"
      license:
        type: Opaque
        keys:
          - "license"
    env:
      database:
        type: kubernetes.io/basic-auth
        keys:
          - "username"
          - "password"
      dotcms-admin:
        type: kubernetes.io/basic-auth
        keys:
          - "password"

serviceAccount:
  create: false    

backup:
  operation: none
  fileName: backup-complete
  path: "/data/shared/backups"
  excludes:
    - "assets/tmp_upload*"
    - "assets/dotGenerated/"
    - "assets/timemachine/"
    - "assets/bundles/*"
    - "assets/server/sql_backups/"

startupProbe:
  httpGet:
    path: /api/v1/appconfiguration
    port: 8082
  initialDelaySeconds: 60
  periodSeconds: 5
  successThreshold: 1
  failureThreshold: 60
  timeoutSeconds: 20

livenessProbe:
  httpGet:
    path: /api/v1/appconfiguration
    port: 8082
  initialDelaySeconds: 1
  periodSeconds: 30
  successThreshold: 1
  failureThreshold: 1
  timeoutSeconds: 10

readinessProbe:
  httpGet:
    path: /api/v1/appconfiguration
    port: 8082
  initialDelaySeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 1
  timeoutSeconds: 5

affinity:
  requireDifferentHosts: false

telemetry:
  enabled: false
  telemetryClient: DEV

linkerd:
  enabled: false

ingress:
  tlsSecretName: developer-certificate-secret
  host: ""
  hostSuffix: dotcms.local
  type: nginx

  alb:
    securityGroups: 
      useDefaults: true
      default:  
        - sg-123456
        - sg-987654   # set in region values
      additional: {}  # override in customer if required.

    hosts:
      default: 
        enabled: true
        hostSuffix: ".dotcms.cloud"
        certificateArn:   # set
      additionalHosts:
        - name: ejco-dev.dotcms.cloud
          certificateArn: arn:aws:acm:us-east-1:948170117212:certificate/22dbe950-ec56-4fd6-b323-e20777bd50df
      stickySessions:
        enabled: true
        duration: 18000
        idleTimeout: 3600
      accessLogs:
        enabled: true
        bucketOverride: ""
        prefixOverride: ""
      wafArn: ""

environments:
  prod: 
    envVarsOverrides:
      DOT_DOTCMS_CLUSTER_ID: "dotcms-dev-prod"
      DB_PASSWORD: "SECRET:corp-dotcms-dev-localsecret-prod-database:password"
      DB_USERNAME: "SECRET:corp-dotcms-dev-localsecret-prod-database:username"      
      # CUSTOM_STARTER_URL: "https://repo.dotcms.com/artifactory/libs-release/com/dotcms/starter/20240724/starter-20240724.zip"
    removeKeys: {} # If not too difficult to implement.
  auth:
    envVarsOverrides:
      DOT_DOTCMS_CLUSTER_ID: "dotcms-dev-auth"
      DB_PASSWORD: "SECRET:corp-dotcms-dev-localsecret-auth-database:password"
      DB_USERNAME: "SECRET:corp-dotcms-dev-localsecret-auth-database:username"        
      DOT_TELEMETRY_SAVE_SCHEDULE: "0 0 */8 * * ?"
    removeKeys: {} # If not too difficult to implement.

    customStarter: 
      repo: "https://repo.dotcms.com/artifactory/libs-release"
      groupId: com.dotcms # in helm template convert . to / to construct url
      artifactId: starter
      version: "20240724"
      starterUrlOverride: "" # Full starter url if provided instead of generated.
      
    # feature:
    #   redisSessions:
    #     enabled: true
    #     secretNameOverride: "" # default {hostType}-{customer}-awssecret-redis
    #     redisHost: "master.redis-dotcms-prod-1.j8m2fx.use1.cache.amazonaws.com"
    #     redisPort: 6379 
    #     sslEnabled: true
    #     persistentPolicied: "DEFAULT"

    #   glowroot:
    #     enabled: true
    #     agentIdOverride : ""   # default {customer}::{env}
    #     collectorAddress : "http://glowrootcentral.dotcmscloud.com:8181" 

    #   analytics:
    #     enabled: true
    #     idpUrl: 
    #     autoInjection: true 

mail:
  enabled: true
  smtp:
    host: 
    port: 587
    auth: 
    sslProtocols: 
    secretNameOverride: "default {hostType}-{customer}-awssecret-ses:password"
      
database:
  local:
    enabled: true
    image: pgvector/pgvector:pg16
    resources:
      requests:
        cpu: 100m
        memory: 3Gi
      limits:
        cpu: 500m
        memory: 3Gi
  secretNameOverride: "{{ | default {hostType}-{customer}-awssecret-{env}-database }}"
  host: # if not set uses dev host "db"
  port: 5432
  name: dotcms

opensearch:
  host:
  endpointUrl: "{{ .Values.opensearch.protocol }}://{{ .Values.opensearch.host }}:{{ .Values.opensearch.port }}"
  local:
    enabled: true
    image: opensearchproject/opensearch:1
  port: 9200
  protocol: http
  javaOpts: "-Xmx1G"
  authType: BASIC
  secretNameOverride: " default default {hostType}-{customer}-awssecret-elasticsearch"
  clusterIdOverride: ""

redis:
  local:
    enabled: true
    image: redis:latest
  host:
  port: 6379
  secretNameOverride: " default {hostType}-{customer}-awssecret-redis"
  password: ""
  sslEnabled: true
  sessionHost: "redis"
  sessionPersistentPolicies: "DEFAULT"

envVarsDefaults:
  DOT_ES_ENDPOINTS: "{{ include \"dotcms.opensearch.endpoints\" . }}"
  DOT_ES_AUTH_TYPE: "BASIC"
  DOT_ES_AUTH_BASIC_USER: "SECRET:{{ .Values.hostType }}-{{ .Values.customerName }}-{{ .Values.cloudProvider }}secret-elasticsearch:username"
  DOT_ES_AUTH_BASIC_PASSWORD: "SECRET:{{ .Values.hostType }}-{{ .Values.customerName }}-{{ .Values.cloudProvider }}secret-elasticsearch:password"
  DOT_REINDEX_THREAD_MINIMUM_RUNTIME_IN_SEC: "120"
  DOT_DOTGENERATED_DEFAULT_PATH: "shared"
  DOT_DOTCMS_CLUSTER_ID: "{{ .Values.customerName }}-prod"
  DB_DNSNAME: "{{ .Values.database.host | default \"db\" }}"
  DB_BASE_URL: "{{ printf \"jdbc:postgresql://%s:%v/%s\" (.Values.database.host | default \"db\") (int .Values.database.port) (include \"dotcms.db.name\" .) }}"
  DB_USERNAME: "SECRET:{{ .Values.hostType }}-{{ .Values.customerName }}-{{ .Values.cloudProvider }}secret-prod-database:username"
  DB_PASSWORD: "SECRET:{{ .Values.hostType }}-{{ .Values.customerName }}-{{ .Values.cloudProvider }}secret-prod-database:password"
  DOT_MAIL_SMTP_HOST: "{{ .Values.mail.smtp.host }}"
  DOT_MAIL_SMTP_PORT: "587"
  DOT_MAIL_SMTP_STARTTLS_ENABLE: "true"
  DOT_MAIL_SMTP_USER: "SECRET:{{ .Values.hostType }}-{{ .Values.customerName }}-{{ .Values.cloudProvider }}secret-ses:username"
  DOT_MAIL_SMTP_PASSWORD: "SECRET:{{ .Values.hostType }}-{{ .Values.customerName }}-{{ .Values.cloudProvider }}secret-ses:password"
  DOT_MAIL_SMTP_AUTH: "true"
  DOT_MAIL_SMTP_SSL_PROTOCOLS: "TLSv1.2"
  CMS_JAVA_OPTS: "-XX:+PrintFlagsFinal -Djdk.lang.Process.launchMechanism=fork"
  DOT_URI_NORMALIZATION_FORBIDDEN_REGEX: "\\/\\/html\\/.*"
  DOT_SYSTEM_STATUS_API_IP_ACL: "0.0.0.0/0"
  DOT_REMOTE_CALL_SUBNET_BLACKLIST: "169.254.169.254/32127.0.0.1/3210.0.0.0/8172.16.0.0/12192.168.0.0/16"
  DOT_REMOTE_CALL_ALLOW_REDIRECTS: "true"
  # DOT_FEATURE_FLAG_TELEMETRY: "true"
  # DOT_TELEMETRY_SAVE_SCHEDULE: "0 0 */8 * * ?"
  DOT_COOKIES_HTTP_ONLY: "false"
  CUSTOM_STARTER_URL: '{{ include "dotcms.customStarter.url" . }}'

  # DOT_SHUTDOWN_ON_STARTUP: "{{ .ShutdownOnStartupValue }}"
  # CMS_JAVA_OPTS: "-XX:+PrintFlagsFinal -Djdk.lang.Process.launchMechanism=fork"
  # DOT_ES_ENDPOINTS: "{{ $opensearchHost }}"
  # DOT_ES_AUTH_TYPE: "BASIC"
  # DOT_ES_AUTH_BASIC_USER 
  #   valueFrom:
  #     secretKeyRef:
  #       name: {{ include "dotcms.secret.shared.name" (dict "Values" .Values "secretName" "elasticsearch") }}
  #       key: username
  # DOT_ES_AUTH_BASIC_PASSWORD
  #   valueFrom:
  #     secretKeyRef:
  #       name: {{ include "dotcms.secret.shared.name" (dict "Values" .Values "secretName" "elasticsearch") }}
  #       key: password
  # DB_DNSNAME: "{{ $databaseHost }}"
  # DB_BASE_URL: "{{ $dbBaseUrl }}"
  # DB_USERNAME
  #   valueFrom:
  #     secretKeyRef:
  #       name: {{ include "dotcms.secret.env.name" (dict "Values" .Values "secretName" "database") }}
  #       key: username
  # DB_PASSWORD
  #   valueFrom:
  #     secretKeyRef:
  #       name: {{ include "dotcms.secret.env.name" (dict "Values" .Values "secretName" "database") }}
  #       key: password
  # DOT_URI_NORMALIZATION_FORBIDDEN_REGEX: "\\/\\/html\\/.*"
  # DOT_SYSTEM_STATUS_API_IP_ACL: "0.0.0.0/0"
  # DOT_REMOTE_CALL_SUBNET_BLACKLIST: "169.254.169.254/32,127.0.0.1/32,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
  # DOT_REMOTE_CALL_ALLOW_REDIRECTS: "true"
  # DOT_COOKIES_HTTP_ONLY: "false"
  # CUSTOM_STARTER_URL: '{{ include "dotcms.customStarter.url" (dict "Values" .Values "envName" $envName) }}'
 