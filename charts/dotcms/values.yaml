app: dotcms
customerName: dotcms-dev
environmentType: local-dev
cloudProvider: local
hostType: corp  # corp, sh
aws:
  region: us-east-1
  serviceAccount:
    roleArn: ""
  secrets:
    secretsArn: ""
secrets:
  useSecretsStoreCSI: false
  sync:
    shared:
      elasticsearch:
        type: kubernetes.io/basic-auth
        keys:
          - "username"
          - "password"
      ses:
        type: kubernetes.io/basic-auth
        keys:
          - "username"
          - "password"
      license:
        type: Opaque
        keys:
          - "license"
    env:
      database:
        type: kubernetes.io/basic-auth
        keys:
          - "username"
          - "password"
      dotcms-admin:
        type: kubernetes.io/basic-auth
        keys:
          - "password"
  createSecrets: true
serviceAccount:
  create: false

coreServiceEnabled: true
environments:
  prod:
    mapToTopLevelDomain: true
affinity:
  requireDifferentHosts: false
telemetry:
  enabled: false
  telemetryClient: DEV
ingress:
  tlsSecretName: developer-certificate-secret
  host: ""
  hostSuffix: dotcms.local
  type: nginx
  alb:
    certificateArn: ""
    sslPolicy: ""
    securityGroups: ""
enabled: true
repository: dotcms/dotcms_test
tag: 1.0.0-SNAPSHOT
imagePullPolicy: IfNotPresent
terminationGracePeriodSeconds: 10
scaleDownBeforeUpgrade: false
replicas: 1
resources:
  requests:
    cpu: 0.5
    memory: 5Gi
  limits:
    cpu: 2
    memory: 5Gi
envVariables: {}
javaMemory: 2
redisSessions:
  enabled: true
startupProbe:
  httpGet:
    path: /api/v1/appconfiguration
    port: 8082
  initialDelaySeconds: 30
  periodSeconds: 5
  successThreshold: 1
  failureThreshold: 60
  timeoutSeconds: 1
livenessProbe:
  httpGet:
    path: /api/v1/appconfiguration
    port: 8082
  initialDelaySeconds: 1
  periodSeconds: 30
  successThreshold: 1
  failureThreshold: 1
  timeoutSeconds: 10
readinessProbe:
  httpGet:
    path: /api/v1/appconfiguration
    port: 8082
  initialDelaySeconds: 1
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 1
  timeoutSeconds: 5
volumes:
  shared:
    accessPoint: ""
    volumeHandle: ""
    create: true
defaultJavaOpts: "-XX:+PrintFlagsFinal -Djdk.lang.Process.launchMechanism=fork"
additionalJavaOpts: ""
javaHeapMax: 2g
remoteCallSubnetBlacklist: 169.254.169.254/32,127.0.0.1/32,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16
# customEnvVars:
#   TEST_ENV_VAR: test
linkerd:
  enabled: false
opensearch:
  host: external-host
  endpointUrl: "{{ .Values.opensearch.protocol }}://{{ .Values.opensearch.host }}:{{ .Values.opensearch.port }}"
  local:
    enabled: true
    image: opensearchproject/opensearch:1
  port: 9200
  protocol: http
  auth:
    type: BASIC
  javaOpts: "-Xmx1G"
database:
  local:
    enabled: true
    image: pgvector/pgvector:pg16
    resources:
      requests:
        cpu: 100m
        memory: 3Gi
      limits:
        cpu: 500m
        memory: 3Gi
  host: db
  port: 5432
  name: dotcms
  sslMode: prefer
  baseUrl: "jdbc:postgresql://{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}?sslmode={{ .Values.database.sslMode }}"
redis:
  enabled: true
  local:
    enabled: true
    image: redis:latest
  host: redis.local
  password: MY_SECRET_P4SS
  port: 6379
  sessionHost: redis
  sessionPersistentPolicies: DEFAULT
  sslEnabled: false
mail:
  enabled: false
  local:
    enabled: false
  host: smtp.gmail.com
  port: 587
